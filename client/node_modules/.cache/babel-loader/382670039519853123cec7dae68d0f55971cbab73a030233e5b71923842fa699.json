{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\OneDrive\\\\Desktop\\\\integration in react with node\\\\to-do-list\\\\client\\\\src\\\\Components\\\\ToDoList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToDoList() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const fetchTasks = async () => {\n    try {\n      const {\n        data\n      } = await Axios.get('http://localhost:8000/api/v1/task');\n      const arrayOfTask = data.data.forEach(element => {\n        element;\n      });\n      ;\n      setTasks(data.data[0]); // Assuming your API returns an array of tasks\n      console.log(arrayOfTask);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  // console.log(\"tasc\",tasks.data[0].task)\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: tasks.task\n    }, tasks.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(ToDoList, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useEffect","useState","Axios","jsxDEV","_jsxDEV","ToDoList","_s","tasks","setTasks","fetchTasks","data","get","arrayOfTask","forEach","element","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","task","id","_c","$RefreshReg$"],"sources":["C:/Users/Hp/OneDrive/Desktop/integration in react with node/to-do-list/client/src/Components/ToDoList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Axios from 'axios';\r\n\r\nfunction ToDoList() {\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  const fetchTasks = async () => {\r\n    try {\r\n      const { data } = await Axios.get('http://localhost:8000/api/v1/task');\r\n      const arrayOfTask = data.data.forEach(element => {\r\n        element\r\n      });;\r\n      setTasks(data.data[0]); // Assuming your API returns an array of tasks\r\n      console.log(arrayOfTask)\r\n    } catch (error) {\r\n      console.error('Error fetching tasks:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n  }, []);\r\n// console.log(\"tasc\",tasks.data[0].task)\r\n  return (\r\n    <div>\r\n      <h2>To-Do List</h2>\r\n        <p key={tasks.id}>{tasks.task}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToDoList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMQ,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,mCAAmC,CAAC;MACrE,MAAMC,WAAW,GAAGF,IAAI,CAACA,IAAI,CAACG,OAAO,CAACC,OAAO,IAAI;QAC/CA,OAAO;MACT,CAAC,CAAC;MAAC;MACHN,QAAQ,CAACE,IAAI,CAACA,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACxBK,OAAO,CAACC,GAAG,CAACJ,WAAW,CAAC;IAC1B,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAEDjB,SAAS,CAAC,MAAM;IACdS,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EACR;EACE,oBACEL,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBlB,OAAA;MAAAc,QAAA,EAAmBX,KAAK,CAACgB;IAAI,GAArBhB,KAAK,CAACiB,EAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEV;AAAChB,EAAA,CA1BQD,QAAQ;AAAAoB,EAAA,GAARpB,QAAQ;AA4BjB,eAAeA,QAAQ;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}