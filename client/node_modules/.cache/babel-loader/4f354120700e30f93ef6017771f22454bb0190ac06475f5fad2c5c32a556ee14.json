{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\OneDrive\\\\Desktop\\\\integration in react with node\\\\to-do-list\\\\client\\\\src\\\\Components\\\\ToDoList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToDoList() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const postData = {\n    task: \"\"\n  };\n  const [inputData, setInputData] = useState(postData);\n  const handleData = e => {\n    setInputData({\n      ...inputData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const date = () => {\n    const todayDate = moment().format('MMM DD YY');\n    console.log(\"todayDate\", todayDate);\n    const taskDate = moment(tasks[0].created_at, 'mm/dd/yyyy');\n    console.log(\"tasks\", taskDate);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (inputData.task.trim() !== '') {\n      Axios.post('http://localhost:8000/api/v1/task', inputData).then(response => {\n        console.log(response);\n        // Clear the input field after successfully adding a task\n        setInputData({\n          task: ''\n        });\n        // Fetch the updated list of tasks\n        fetchTasks();\n      }).catch(error => {\n        console.error('Error adding task:', error);\n      });\n    } else {\n      // Handle the case where the task input is empty\n      console.warn('Task cannot be empty');\n    }\n  };\n  const fetchTasks = async () => {\n    try {\n      const {\n        data\n      } = await Axios.get('http://localhost:8000/api/v1/task');\n      const arrayOfTask = data.data;\n      setTasks(arrayOfTask); // Store the entire array of tasks\n      console.log(arrayOfTask);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  date();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"task\",\n      value: inputData.task,\n      onChange: handleData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"addTask\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: task.task\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(ToDoList, \"P6YNe8xCvGCQ4qYUWeptzsY5IlA=\");\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useEffect","useState","Axios","moment","jsxDEV","_jsxDEV","ToDoList","_s","tasks","setTasks","postData","task","inputData","setInputData","handleData","e","target","name","value","date","todayDate","format","console","log","taskDate","created_at","handleSubmit","preventDefault","trim","post","then","response","fetchTasks","catch","error","warn","data","get","arrayOfTask","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","map","id","_c","$RefreshReg$"],"sources":["C:/Users/Hp/OneDrive/Desktop/integration in react with node/to-do-list/client/src/Components/ToDoList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Axios from 'axios';\r\nimport moment from 'moment'\r\n\r\nfunction ToDoList() {\r\n  const [tasks, setTasks] = useState([]);\r\n  const postData = {task : \"\"};\r\n  const [inputData,setInputData] = useState(postData);\r\n  const handleData = (e) =>{\r\n    setInputData({...inputData, [e.target.name]:e.target.value});\r\n  }\r\n\r\n  const date = () =>{\r\n    const todayDate = moment().format('MMM DD YY');\r\n    console.log(\"todayDate\",todayDate);\r\n    const taskDate = moment(tasks[0].created_at,'mm/dd/yyyy')\r\n    console.log(\"tasks\",taskDate)\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputData.task.trim() !== '') {\r\n      Axios.post('http://localhost:8000/api/v1/task', inputData)\r\n        .then((response) => {\r\n          console.log(response);\r\n          // Clear the input field after successfully adding a task\r\n          setInputData({ task: '' });\r\n          // Fetch the updated list of tasks\r\n          fetchTasks();\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error adding task:', error);\r\n        });\r\n    } else {\r\n      // Handle the case where the task input is empty\r\n      console.warn('Task cannot be empty');\r\n    }\r\n  };\r\n  const fetchTasks = async () => {\r\n    try {\r\n      const { data } = await Axios.get('http://localhost:8000/api/v1/task');\r\n      const arrayOfTask = data.data;\r\n\r\n      setTasks(arrayOfTask); // Store the entire array of tasks\r\n      console.log(arrayOfTask);\r\n    } catch (error) {\r\n      console.error('Error fetching tasks:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n  }, []);\r\n  date()\r\n  return (\r\n    <div>\r\n      <h2>To-Do List</h2>\r\n        <input type='text' name='task' value={inputData.task} onChange={handleData}></input>\r\n        <button onClick={handleSubmit}>addTask</button>\r\n      {tasks.map(task => (\r\n        <p key={task.id}>{task.task}</p>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToDoList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}