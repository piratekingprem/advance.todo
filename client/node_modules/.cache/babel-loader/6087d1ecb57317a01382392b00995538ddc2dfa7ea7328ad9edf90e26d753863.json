{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\OneDrive\\\\Desktop\\\\integration in react with node\\\\to-do-list\\\\client\\\\src\\\\Components\\\\ToDoList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\nimport moment from 'moment';\n// import {} from 'moment-timezone';\n// import styled from 'styled-components';\nimport '../Component_styles/ToDoList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ToDoList() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  // const user = localStorage.getItem('username')\n  const postData = {\n    task: \"\"\n  };\n  const [inputData, setInputData] = useState(postData);\n  const status = {\n    status: 1\n  };\n  const [editing, setEditing] = useState(false);\n  const [editedTask, setEditedTask] = useState({\n    id: null,\n    value: ''\n  });\n  const [previousDateTask, setPreviousDate] = useState();\n  const handleData = e => {\n    setInputData({\n      ...inputData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const user = JSON.parse(localStorage.getItem('data')).userID;\n  console.log(user);\n  const handleDateOfPreviousTask = e => {\n    const selectedDate = e.target.value;\n    setPreviousDate(selectedDate);\n  };\n  const handleTaskEdit = taskId => {\n    // Find the task to edit based on its ID\n    const taskToEdit = tasks.find(task => task.id === taskId);\n\n    // Set the edited task in the state\n    setEditedTask({\n      id: taskId,\n      value: taskToEdit.task\n    });\n    setEditing(true);\n  };\n  const handleTaskUpdate = () => {\n    // Make sure the edited task is not empty\n    if (editedTask.value.trim() !== '') {\n      // Send a PUT request to update the task\n      Axios.put(`http://localhost:8000/api/v1/task/${editedTask.id}`, {\n        task: editedTask.value\n      }).then(response => {\n        console.log(response);\n        // Reset the edited task state and fetch the updated list of tasks\n        setEditedTask({\n          id: null,\n          value: ''\n        });\n        setEditing(false);\n        fetchTasks();\n      }).catch(error => {\n        console.error('Error updating task:', error);\n      });\n    } else {\n      console.warn('Task cannot be empty');\n    }\n  };\n  const handleTaskDelete = e => {\n    Axios.delete(`http://localhost:8000/api/v1/task/${e}`).then(fetchTasks()).catch(error => {\n      console.log(error);\n    });\n  };\n  const todayDate = moment().format('YYYY-MM-DD');\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (inputData.task.trim() !== '') {\n      Axios.post('http://localhost:8000/api/v1/task', inputData).then(response => {\n        console.log(response);\n        // Clear the input field after successfully adding a task\n        setInputData({\n          task: ''\n        });\n        // Fetch the updated list of tasks\n        fetchTasks();\n      }).catch(error => {\n        console.error('Error adding task:', error);\n      });\n    } else {\n      // Handle the case where the task input is empty\n      console.warn('Task cannot be empty');\n    }\n  };\n  const fetchTasks = async () => {\n    try {\n      const {\n        data\n      } = await Axios.get('http://localhost:8000/api/v1/task');\n      const arrayOfTask = data.data;\n      setTasks(arrayOfTask); // Store the entire array of tasks\n      console.log(arrayOfTask);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const handleChangeOfCheckBox = e => {\n    e.preventDefault();\n    if (e.target.checked) {\n      Axios.put(`http://localhost:8000/api/v1/task/status/${e.target.value}`, status).then(response => {\n        console.log(response);\n        // Fetch the updated list of tasks\n        fetchTasks();\n      }).catch(error => {\n        console.error('Error adding task:', error);\n      });\n    } else {\n      console.log(\"not checked\");\n    }\n  };\n  const filteredTask = tasks.filter(task => {\n    const taskDate = moment(task.created_at).startOf('day').format('YYYY-MM-DD');\n    return todayDate === taskDate;\n  });\n  const filteredPendingWork = tasks.filter(task => {\n    let yesterday = moment().add(-1, 'days').format('YYYY-MM-DD');\n    const taskDate = moment(task.created_at).startOf('day').format('YYYY-MM-DD');\n    return task.status === 0 && yesterday === taskDate;\n  });\n  let Todayscontent;\n  if (filteredTask.length > 0) {\n    Todayscontent = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Today's task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), filteredTask.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-container\",\n        children: editing && editedTask.id === task.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editedTask.value,\n            onChange: e => setEditedTask({\n              ...editedTask,\n              value: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleTaskUpdate,\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onChange: handleChangeOfCheckBox,\n            name: \"task.task\",\n            value: task.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"task.task\",\n            id: \"checkbox-label\",\n            children: task.task\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            title: \"edit task\",\n            onClick: () => handleTaskEdit(task.id),\n            className: \"fa fa-edit\",\n            style: {\n              fontSize: '50%',\n              color: '#0025ff91'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            title: \"delete\",\n            onClick: () => handleTaskDelete(task.id),\n            className: \"fa fa-trash-o\",\n            style: {\n              color: 'red',\n              fontSize: '50%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this);\n  } else {\n    Todayscontent = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No task for today\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this);\n  }\n  let pendingWork;\n  if (filteredPendingWork.length > 0) {\n    pendingWork = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Yesterday Pending task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), filteredPendingWork.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: task.task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this)\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this);\n  } else {\n    pendingWork = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No pending task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this);\n  }\n  const filteredPreviousDateTask = tasks.filter(task => {\n    const taskDate = moment(task.created_at).startOf('day').format('YYYY-MM-DD');\n    return previousDateTask === taskDate;\n  });\n  let selectedDateTask;\n  if (filteredPreviousDateTask.length > 0) {\n    selectedDateTask = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Task Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), filteredPreviousDateTask.map(task => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: task.task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 18\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this);\n  } else {\n    selectedDateTask = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No Task Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this);\n  }\n  // const user = \n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"heading\",\n        children: \"To-Do List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"task\",\n              value: inputData.task,\n              onChange: handleData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSubmit,\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: Todayscontent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid-item\",\n          children: pendingWork\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input-container\",\n            id: \"date-input\",\n            type: \"date\",\n            name: \"dateOfPrevious\",\n            onChange: handleDateOfPreviousTask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 11\n          }, this), selectedDateTask]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(ToDoList, \"uHzdly7etdOgCnANI1XMS8EEx10=\");\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useEffect","useState","Axios","moment","jsxDEV","_jsxDEV","Fragment","_Fragment","ToDoList","_s","tasks","setTasks","postData","task","inputData","setInputData","status","editing","setEditing","editedTask","setEditedTask","id","value","previousDateTask","setPreviousDate","handleData","e","target","name","user","JSON","parse","localStorage","getItem","userID","console","log","handleDateOfPreviousTask","selectedDate","handleTaskEdit","taskId","taskToEdit","find","handleTaskUpdate","trim","put","then","response","fetchTasks","catch","error","warn","handleTaskDelete","delete","todayDate","format","handleSubmit","preventDefault","post","data","get","arrayOfTask","handleChangeOfCheckBox","checked","filteredTask","filter","taskDate","created_at","startOf","filteredPendingWork","yesterday","add","Todayscontent","length","children","fileName","_jsxFileName","lineNumber","columnNumber","map","className","type","onChange","onClick","htmlFor","title","style","fontSize","color","pendingWork","filteredPreviousDateTask","selectedDateTask","_c","$RefreshReg$"],"sources":["C:/Users/Hp/OneDrive/Desktop/integration in react with node/to-do-list/client/src/Components/ToDoList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Axios from 'axios';\r\nimport moment from 'moment'\r\n// import {} from 'moment-timezone';\r\n// import styled from 'styled-components';\r\nimport '../Component_styles/ToDoList.css'\r\n\r\nfunction ToDoList() {\r\n  const [tasks, setTasks] = useState([]);\r\n  // const user = localStorage.getItem('username')\r\n  const postData = { task: \"\"};\r\n  const [inputData, setInputData] = useState(postData);\r\n  const status = { status: 1 };\r\n  const [editing,setEditing] = useState(false);\r\n  const [editedTask, setEditedTask] = useState({ id: null, value: '' });\r\n  const [previousDateTask, setPreviousDate] = useState();\r\n  const handleData = (e) => {\r\n    setInputData({ ...inputData, [e.target.name]: e.target.value });\r\n  }\r\n  \r\n  const user = JSON.parse(localStorage.getItem('data')).userID;\r\n  console.log(user)\r\n  const handleDateOfPreviousTask = (e) => {\r\n    const selectedDate = e.target.value;\r\n    setPreviousDate(selectedDate);\r\n  };\r\n\r\n\r\n  const handleTaskEdit = (taskId) => {\r\n    // Find the task to edit based on its ID\r\n    const taskToEdit = tasks.find((task) => task.id === taskId);\r\n\r\n    // Set the edited task in the state\r\n    setEditedTask({ id: taskId, value: taskToEdit.task });\r\n    setEditing(true);\r\n  };\r\n\r\n  const handleTaskUpdate = () => {\r\n    // Make sure the edited task is not empty\r\n    if (editedTask.value.trim() !== '') {\r\n      // Send a PUT request to update the task\r\n      Axios.put(`http://localhost:8000/api/v1/task/${editedTask.id}`, { task: editedTask.value })\r\n        .then((response) => {\r\n          console.log(response);\r\n          // Reset the edited task state and fetch the updated list of tasks\r\n          setEditedTask({ id: null, value: '' });\r\n          setEditing(false);\r\n          fetchTasks();\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error updating task:', error);\r\n        });\r\n    } else {\r\n      console.warn('Task cannot be empty');\r\n    }\r\n  };\r\n  const handleTaskDelete = (e) =>{\r\n      Axios.delete(`http://localhost:8000/api/v1/task/${e}`)\r\n      .then(\r\n        fetchTasks()\r\n      )\r\n      .catch((error)=>{\r\n        console.log(error);\r\n      })\r\n  }\r\n  const todayDate = moment().format('YYYY-MM-DD');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputData.task.trim() !== '') {\r\n      Axios.post('http://localhost:8000/api/v1/task', inputData)\r\n        .then((response) => {\r\n          console.log(response);\r\n          // Clear the input field after successfully adding a task\r\n          setInputData({ task: '' });\r\n          // Fetch the updated list of tasks\r\n          fetchTasks();\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error adding task:', error);\r\n        });\r\n    } else {\r\n      // Handle the case where the task input is empty\r\n      console.warn('Task cannot be empty');\r\n    }\r\n  };\r\n  const fetchTasks = async () => {\r\n    try {\r\n      const { data } = await Axios.get('http://localhost:8000/api/v1/task');\r\n      const arrayOfTask = data.data;\r\n\r\n      setTasks(arrayOfTask); // Store the entire array of tasks\r\n      console.log(arrayOfTask);\r\n    } catch (error) {\r\n      console.error('Error fetching tasks:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  const handleChangeOfCheckBox = (e) => {\r\n    e.preventDefault();\r\n    if (e.target.checked) {\r\n      Axios.put(`http://localhost:8000/api/v1/task/status/${e.target.value}`, status)\r\n        .then((response) => {\r\n          console.log(response);\r\n          // Fetch the updated list of tasks\r\n          fetchTasks();\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error adding task:', error);\r\n        });\r\n    } else {\r\n      console.log(\"not checked\")\r\n    }\r\n  }\r\n\r\n  const filteredTask = tasks.filter(task => {\r\n    const taskDate = moment(task.created_at).startOf('day').format('YYYY-MM-DD');\r\n    return todayDate === taskDate;\r\n  })\r\n\r\n  const filteredPendingWork = tasks.filter(task => {\r\n    let yesterday = moment().add(-1, 'days').format('YYYY-MM-DD');\r\n    const taskDate = moment(task.created_at).startOf('day').format('YYYY-MM-DD');\r\n    return (task.status === 0 && yesterday === taskDate);\r\n  })\r\n  let Todayscontent;\r\n\r\n  if (filteredTask.length > 0) {\r\n     Todayscontent = (\r\n      <div>\r\n        <h3>Today's task</h3>\r\n        {filteredTask.map((task) => (\r\n          <div key={task.id} className=\"task-container\">\r\n            {editing && editedTask.id === task.id ? (\r\n              <>\r\n                <input\r\n                  type=\"text\"\r\n                  value={editedTask.value}\r\n                  onChange={(e) => setEditedTask({ ...editedTask, value: e.target.value })}\r\n                />\r\n                <button onClick={handleTaskUpdate}>Update</button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  onChange={handleChangeOfCheckBox}\r\n                  name=\"task.task\"\r\n                  value={task.id}\r\n                />\r\n                <label htmlFor=\"task.task\" id=\"checkbox-label\">\r\n                  {task.task}\r\n                </label>\r\n                <i\r\n                  title=\"edit task\"\r\n                  onClick={() => handleTaskEdit(task.id)}\r\n                  className=\"fa fa-edit\"\r\n                  style={{ fontSize: '50%', color: '#0025ff91' }}\r\n                ></i>\r\n                <i\r\n                  title=\"delete\"\r\n                  onClick={() => handleTaskDelete(task.id)}\r\n                  className=\"fa fa-trash-o\"\r\n                  style={{ color: 'red', fontSize: '50%' }}\r\n                ></i>\r\n              </>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n\r\n  } else {\r\n    Todayscontent = (\r\n      <div>\r\n        <h3>No task for today</h3>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  let pendingWork;\r\n  if (filteredPendingWork.length > 0) {\r\n    pendingWork = (\r\n      <div>\r\n        <h3>Yesterday Pending task</h3>\r\n        {filteredPendingWork.map(task => (\r\n          <div key={task.id}>\r\n            <p>{task.task}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    )\r\n  } else {\r\n    pendingWork = (\r\n      <div>\r\n        <h3>No pending task</h3>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const filteredPreviousDateTask = tasks.filter(task => {\r\n    const taskDate = moment(task.created_at).startOf('day').format('YYYY-MM-DD');\r\n    return previousDateTask === taskDate;\r\n  })\r\n\r\n  let selectedDateTask;\r\n  if (filteredPreviousDateTask.length > 0) {\r\n    selectedDateTask = (\r\n      <div>\r\n        <h3>Task Found</h3>\r\n        {filteredPreviousDateTask.map(task => {\r\n          return <p>{task.task}</p>\r\n        })}\r\n      </div>\r\n    )\r\n  } else {\r\n    selectedDateTask = (\r\n      <div>\r\n        <h3>No Task Found</h3>\r\n      </div>\r\n    )\r\n  }\r\n  // const user = \r\n\r\n  return (\r\n    <>\r\n    {/* <div><p>{localStorage.getItem('username')}</p></div> */}\r\n    <div className='container'>\r\n      <h2 className='heading'>To-Do List</h2>\r\n      <div className='grid-container'>\r\n        <div className='grid-item'>\r\n          <div className='input-container'>\r\n            <input type='text' name='task' value={inputData.task} onChange={handleData} />\r\n            <button onClick={handleSubmit}>+</button>\r\n          </div>\r\n          <ul>\r\n            {Todayscontent}\r\n          </ul>\r\n        </div>\r\n        <div className='grid-item'>\r\n          {pendingWork}\r\n        </div>\r\n        <div className='grid-item'>\r\n          <input className='input-container' id='date-input' type=\"date\" name='dateOfPrevious' onChange={handleDateOfPreviousTask}></input>\r\n          {selectedDateTask}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ToDoList;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}