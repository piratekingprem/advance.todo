{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\OneDrive\\\\Desktop\\\\integration in react with node\\\\to-do-list\\\\client\\\\src\\\\Components\\\\ToDoList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\nimport moment from 'moment';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 20px;\n  font-family: 'Arial', sans-serif;\n`;\n_c = Container;\nconst Title = styled.h2`\n  color: #333;\n  text-align: center;\n`;\n_c2 = Title;\nconst Input = styled.input`\n  width: 100%;\n  padding: 8px;\n  margin: 8px 0;\n  box-sizing: border-box;\n`;\n_c3 = Input;\nconst Button = styled.button`\n  width: 100%;\n  padding: 10px;\n  background-color: #4caf50;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #45a049;\n  }\n`;\n_c4 = Button;\nconst TaskContainer = styled.div`\n  margin-top: 20px;\n`;\n_c5 = TaskContainer;\nconst TaskHeader = styled.h3`\n  color: #333;\n`;\n_c6 = TaskHeader;\nconst TaskList = styled.div`\n  margin-top: 10px;\n`;\n_c7 = TaskList;\nconst CheckBox = styled.input`\n  margin-right: 8px;\n`;\n_c8 = CheckBox;\nconst NoTaskMessage = styled.div`\n  color: #555;\n`;\n_c9 = NoTaskMessage;\nconst DatePicker = styled.input`\n  width: 100%;\n  padding: 8px;\n  margin: 10px 0;\n  box-sizing: border-box;\n`;\n_c10 = DatePicker;\nconst StyledContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 10vh;\n  background-color: #f5f5f5;\n`;\nfunction ToDoList() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const postData = {\n    task: \"\"\n  };\n  const [inputData, setInputData] = useState(postData);\n  const status = {\n    status: 1\n  };\n  const handleData = e => {\n    setInputData({\n      ...inputData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const [previousDateTask, setPreviousDate] = useState();\n  const handleDateOfPreviousTask = e => {\n    const selectedDate = e.target.value;\n    setPreviousDate(selectedDate);\n  };\n  const todayDate = moment().format('YYYY-MM-DD');\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (inputData.task.trim() !== '') {\n      Axios.post('http://localhost:8000/api/v1/task', inputData).then(response => {\n        console.log(response);\n        // Clear the input field after successfully adding a task\n        setInputData({\n          task: ''\n        });\n        // Fetch the updated list of tasks\n        fetchTasks();\n      }).catch(error => {\n        console.error('Error adding task:', error);\n      });\n    } else {\n      // Handle the case where the task input is empty\n      console.warn('Task cannot be empty');\n    }\n  };\n  const fetchTasks = async () => {\n    try {\n      const {\n        data\n      } = await Axios.get('http://localhost:8000/api/v1/task');\n      const arrayOfTask = data.data;\n      setTasks(arrayOfTask); // Store the entire array of tasks\n      console.log(arrayOfTask);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const handleChangeOfCheckBox = e => {\n    e.preventDefault();\n    console.log('status', e.target.value);\n    if (e.target.checked) {\n      Axios.put(`http://localhost:8000/api/v1/task/status/${e.target.value}`, status).then(response => {\n        console.log(response);\n        // Fetch the updated list of tasks\n        fetchTasks();\n      }).catch(error => {\n        console.error('Error adding task:', error);\n      });\n    } else {\n      console.log(\"not checked\");\n    }\n  };\n  const filteredTask = tasks.filter(task => {\n    const taskDate = moment(task.created_at.slice(0, 10)).format('YYYY-MM-DD');\n    return todayDate === taskDate;\n  });\n  const filteredPendingWork = tasks.filter(task => {\n    let yesterday = moment().add(-1, 'days').format('YYYY-MM-DD');\n    const taskDate = moment(task.created_at.slice(0, 10)).format('YYYY-MM-DD');\n    return task.status === 1 && yesterday === taskDate;\n  });\n  let Todayscontent;\n  if (filteredTask.length > 0) {\n    Todayscontent = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Today's task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), filteredTask.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          onChange: handleChangeOfCheckBox,\n          name: \"task.task\",\n          value: task.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"task.task\",\n          children: task.task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 59\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this);\n  } else {\n    Todayscontent = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No task for today\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this);\n  }\n  let pendingWork;\n  if (filteredPendingWork.length > 0) {\n    pendingWork = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Yesterday pending task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), filteredPendingWork.map(task => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: task.task\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 18\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this);\n  } else {\n    pendingWork = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No pending task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this);\n  }\n  const filteredPreviousDateTask = tasks.filter(task => {\n    const taskDate = moment(task.created_at.slice(0, 10)).format('YYYY-MM-DD');\n    return previousDateTask === taskDate;\n  });\n  let selectedDateTask;\n  if (filteredPreviousDateTask.length > 0) {\n    selectedDateTask = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Task Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), filteredPreviousDateTask.map(task => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: task.task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 18\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this);\n  } else {\n    selectedDateTask = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No Task Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 5\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      name: \"task\",\n      value: inputData.task,\n      onChange: handleData,\n      placeholder: \"Enter your task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleSubmit,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(TaskContainer, {\n      children: [/*#__PURE__*/_jsxDEV(TaskHeader, {\n        children: \"Today's Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        children: filteredTask.length > 0 ? filteredTask.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(CheckBox, {\n            type: \"checkbox\",\n            onChange: handleChangeOfCheckBox,\n            name: \"task.task\",\n            value: task.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"task.task\",\n            children: task.task\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this)) : /*#__PURE__*/_jsxDEV(NoTaskMessage, {\n          children: \"No tasks for today\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(TaskContainer, {\n      children: [/*#__PURE__*/_jsxDEV(TaskHeader, {\n        children: \"Yesterday's Pending Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        children: filteredPendingWork.length > 0 ? filteredPendingWork.map(task => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: task.task\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 45\n        }, this)) : /*#__PURE__*/_jsxDEV(NoTaskMessage, {\n          children: \"No pending tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(TaskContainer, {\n      children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n        type: \"date\",\n        name: \"dateOfPrevious\",\n        onChange: handleDateOfPreviousTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TaskHeader, {\n        children: \"Tasks on Selected Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        children: selectedDateTask.length > 0 ? selectedDateTask.map(task => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: task.task\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 42\n        }, this)) : /*#__PURE__*/_jsxDEV(NoTaskMessage, {\n          children: \"No tasks found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 3\n  }, this);\n}\n_s(ToDoList, \"rmiph2jeraEpoYHE3CIgRenki3s=\");\n_c11 = ToDoList;\nexport default ToDoList;\nconst StyledConatiner = styled.div`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nheight: 10vh;\nbackground-color: #f5f5f5;\n`;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"Input\");\n$RefreshReg$(_c4, \"Button\");\n$RefreshReg$(_c5, \"TaskContainer\");\n$RefreshReg$(_c6, \"TaskHeader\");\n$RefreshReg$(_c7, \"TaskList\");\n$RefreshReg$(_c8, \"CheckBox\");\n$RefreshReg$(_c9, \"NoTaskMessage\");\n$RefreshReg$(_c10, \"DatePicker\");\n$RefreshReg$(_c11, \"ToDoList\");","map":{"version":3,"names":["React","useEffect","useState","Axios","moment","styled","jsxDEV","_jsxDEV","Container","div","_c","Title","h2","_c2","Input","input","_c3","Button","button","_c4","TaskContainer","_c5","TaskHeader","h3","_c6","TaskList","_c7","CheckBox","_c8","NoTaskMessage","_c9","DatePicker","_c10","StyledContainer","ToDoList","_s","tasks","setTasks","postData","task","inputData","setInputData","status","handleData","e","target","name","value","previousDateTask","setPreviousDate","handleDateOfPreviousTask","selectedDate","todayDate","format","handleSubmit","preventDefault","trim","post","then","response","console","log","fetchTasks","catch","error","warn","data","get","arrayOfTask","handleChangeOfCheckBox","checked","put","filteredTask","filter","taskDate","created_at","slice","filteredPendingWork","yesterday","add","Todayscontent","length","children","fileName","_jsxFileName","lineNumber","columnNumber","map","type","onChange","id","htmlFor","pendingWork","filteredPreviousDateTask","selectedDateTask","placeholder","onClick","_c11","StyledConatiner","$RefreshReg$"],"sources":["C:/Users/Hp/OneDrive/Desktop/integration in react with node/to-do-list/client/src/Components/ToDoList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Axios from 'axios';\r\nimport moment from 'moment'\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  font-family: 'Arial', sans-serif;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  color: #333;\r\n  text-align: center;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  padding: 8px;\r\n  margin: 8px 0;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #4caf50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #45a049;\r\n  }\r\n`;\r\n\r\nconst TaskContainer = styled.div`\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst TaskHeader = styled.h3`\r\n  color: #333;\r\n`;\r\n\r\nconst TaskList = styled.div`\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst CheckBox = styled.input`\r\n  margin-right: 8px;\r\n`;\r\n\r\nconst NoTaskMessage = styled.div`\r\n  color: #555;\r\n`;\r\n\r\nconst DatePicker = styled.input`\r\n  width: 100%;\r\n  padding: 8px;\r\n  margin: 10px 0;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst StyledContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 10vh;\r\n  background-color: #f5f5f5;\r\n`;\r\n\r\n\r\n\r\nfunction ToDoList() {\r\n  const [tasks, setTasks] = useState([]);\r\n  const postData = { task: \"\" };\r\n  const [inputData, setInputData] = useState(postData);\r\n  const status = { status: 1 }\r\n  const handleData = (e) => {\r\n    setInputData({ ...inputData, [e.target.name]: e.target.value });\r\n  }\r\n  const [previousDateTask, setPreviousDate] = useState();\r\n\r\n  const handleDateOfPreviousTask = (e) => {\r\n    const selectedDate = e.target.value;\r\n    setPreviousDate(selectedDate);\r\n  };\r\n  const todayDate = moment().format('YYYY-MM-DD');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputData.task.trim() !== '') {\r\n      Axios.post('http://localhost:8000/api/v1/task', inputData)\r\n        .then((response) => {\r\n          console.log(response);\r\n          // Clear the input field after successfully adding a task\r\n          setInputData({ task: '' });\r\n          // Fetch the updated list of tasks\r\n          fetchTasks();\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error adding task:', error);\r\n        });\r\n    } else {\r\n      // Handle the case where the task input is empty\r\n      console.warn('Task cannot be empty');\r\n    }\r\n  };\r\n  const fetchTasks = async () => {\r\n    try {\r\n      const { data } = await Axios.get('http://localhost:8000/api/v1/task');\r\n      const arrayOfTask = data.data;\r\n\r\n      setTasks(arrayOfTask); // Store the entire array of tasks\r\n      console.log(arrayOfTask);\r\n    } catch (error) {\r\n      console.error('Error fetching tasks:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  const handleChangeOfCheckBox = (e) => {\r\n    e.preventDefault();\r\n    console.log('status', e.target.value)\r\n    if (e.target.checked) {\r\n      Axios.put(`http://localhost:8000/api/v1/task/status/${e.target.value}`, status)\r\n        .then((response) => {\r\n          console.log(response);\r\n          // Fetch the updated list of tasks\r\n          fetchTasks();\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error adding task:', error);\r\n        });\r\n    } else {\r\n      console.log(\"not checked\")\r\n    }\r\n  }\r\n\r\n  const filteredTask = tasks.filter(task => {\r\n    const taskDate = moment(task.created_at.slice(0, 10)).format('YYYY-MM-DD');\r\n    return todayDate === taskDate;\r\n  })\r\n\r\n  const filteredPendingWork = tasks.filter(task => {\r\n    let yesterday = moment().add(-1, 'days').format('YYYY-MM-DD');\r\n    const taskDate = moment(task.created_at.slice(0, 10)).format('YYYY-MM-DD');\r\n    return (task.status === 1 && yesterday === taskDate);\r\n  })\r\n  let Todayscontent;\r\n\r\n  if (filteredTask.length > 0) {\r\n    Todayscontent = (\r\n      <div>\r\n        <h3>Today's task</h3>\r\n        {filteredTask.map(task => (\r\n          <div key={task.id}>\r\n            <input\r\n              type='checkbox'\r\n              onChange={handleChangeOfCheckBox}\r\n              name='task.task'\r\n              value={task.id}\r\n            />\r\n            <label htmlFor='task.task'>{task.task}</label><br />\r\n          </div>\r\n        ))}\r\n\r\n      </div>\r\n    )\r\n\r\n  } else {\r\n    Todayscontent = (\r\n      <div>\r\n        <h3>No task for today</h3>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  let pendingWork;\r\n  if (filteredPendingWork.length > 0) {\r\n    pendingWork = (\r\n      <div>\r\n        <h3>Yesterday pending task</h3>\r\n        {filteredPendingWork.map(task => {\r\n          return <p key={task.id}>{task.task}</p>\r\n        })}\r\n      </div>\r\n    )\r\n  } else {\r\n    pendingWork = (\r\n      <div>\r\n        <h3>No pending task</h3>\r\n      </div>\r\n    )\r\n  }\r\n\r\nconst filteredPreviousDateTask = tasks.filter(task =>{\r\n  const taskDate = moment(task.created_at.slice(0, 10)).format('YYYY-MM-DD');\r\n  return previousDateTask === taskDate;\r\n})\r\n\r\nlet selectedDateTask;\r\nif(filteredPreviousDateTask.length > 0){\r\n    selectedDateTask = (\r\n      <div>\r\n        <h3>Task Found</h3>\r\n        {filteredPreviousDateTask.map(task =>{\r\n          return <p>{task.task}</p>\r\n        })}\r\n      </div>\r\n    )\r\n}else{\r\n  selectedDateTask = (\r\n    <div>\r\n      <h3>No Task Found</h3>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nreturn (\r\n  <Container>\r\n    <Title>To-Do List</Title>\r\n    <Input type=\"text\" name=\"task\" value={inputData.task} onChange={handleData} placeholder=\"Enter your task\" />\r\n    <Button onClick={handleSubmit}>Add Task</Button>\r\n    <TaskContainer>\r\n      <TaskHeader>Today's Tasks</TaskHeader>\r\n      <TaskList>\r\n        {filteredTask.length > 0 ? (\r\n          filteredTask.map((task) => (\r\n            <div key={task.id}>\r\n              <CheckBox\r\n                type=\"checkbox\"\r\n                onChange={handleChangeOfCheckBox}\r\n                name=\"task.task\"\r\n                value={task.id}\r\n              />\r\n              <label htmlFor=\"task.task\">{task.task}</label>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <NoTaskMessage>No tasks for today</NoTaskMessage>\r\n        )}\r\n      </TaskList>\r\n    </TaskContainer>\r\n    <TaskContainer>\r\n      <TaskHeader>Yesterday's Pending Tasks</TaskHeader>\r\n      <TaskList>\r\n        {filteredPendingWork.length > 0 ? (\r\n          filteredPendingWork.map((task) => <p key={task.id}>{task.task}</p>)\r\n        ) : (\r\n          <NoTaskMessage>No pending tasks</NoTaskMessage>\r\n        )}\r\n      </TaskList>\r\n    </TaskContainer>\r\n    <TaskContainer>\r\n      <DatePicker type=\"date\" name=\"dateOfPrevious\" onChange={handleDateOfPreviousTask} />\r\n      <TaskHeader>Tasks on Selected Date</TaskHeader>\r\n      <TaskList>\r\n        {selectedDateTask.length > 0 ? (\r\n          selectedDateTask.map((task) => <p key={task.id}>{task.task}</p>)\r\n        ) : (\r\n          <NoTaskMessage>No tasks found</NoTaskMessage>\r\n        )}\r\n      </TaskList>\r\n    </TaskContainer>\r\n  </Container>\r\n);\r\n}\r\n\r\nexport default ToDoList;\r\n\r\nconst StyledConatiner = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center;\r\nheight: 10vh;\r\nbackground-color: #f5f5f5;\r\n`"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}