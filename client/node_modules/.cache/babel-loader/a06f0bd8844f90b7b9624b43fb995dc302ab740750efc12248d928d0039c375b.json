{"ast":null,"code":"function validation(values) {\n  let error = {};\n  const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  const password_pattern = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{8,}$/;\n  if (values.email === \"\") {\n    error.email = \"Name should not be empty\";\n  } else if (!email_pattern.test(values.email)) {\n    error.email = \"Email Didn't match\";\n  } else {\n    error.email = \"\";\n  }\n  if (values.password === \"\") {\n    error.password = 'Password should not be empty';\n  } else {\n    error.password = \"\";\n  }\n  return error;\n}\nexport default validation;","map":{"version":3,"names":["validation","values","error","email_pattern","password_pattern","email","test","password"],"sources":["C:/Users/Hp/OneDrive/Desktop/integration in react with node/to-do-list/client/src/Components/LoginValidation.js"],"sourcesContent":["function validation(values) {\r\n    let error = {}\r\n    const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\r\n    const password_pattern = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{8,}$/\r\n\r\n    if(values.email === \"\"){\r\n        error.email = \"Name should not be empty\"\r\n    }\r\n    else if(!email_pattern.test(values.email)){\r\n        error.email = \"Email Didn't match\"\r\n    }else{\r\n        error.email = \"\"\r\n    }\r\n\r\n    if(values.password === \"\"){\r\n        error.password = 'Password should not be empty'\r\n    }\r\n    else{\r\n        error.password = \"\"\r\n    }\r\n    return error;\r\n}\r\n\r\nexport default validation;"],"mappings":"AAAA,SAASA,UAAUA,CAACC,MAAM,EAAE;EACxB,IAAIC,KAAK,GAAG,CAAC,CAAC;EACd,MAAMC,aAAa,GAAG,4BAA4B;EAClD,MAAMC,gBAAgB,GAAG,iDAAiD;EAE1E,IAAGH,MAAM,CAACI,KAAK,KAAK,EAAE,EAAC;IACnBH,KAAK,CAACG,KAAK,GAAG,0BAA0B;EAC5C,CAAC,MACI,IAAG,CAACF,aAAa,CAACG,IAAI,CAACL,MAAM,CAACI,KAAK,CAAC,EAAC;IACtCH,KAAK,CAACG,KAAK,GAAG,oBAAoB;EACtC,CAAC,MAAI;IACDH,KAAK,CAACG,KAAK,GAAG,EAAE;EACpB;EAEA,IAAGJ,MAAM,CAACM,QAAQ,KAAK,EAAE,EAAC;IACtBL,KAAK,CAACK,QAAQ,GAAG,8BAA8B;EACnD,CAAC,MACG;IACAL,KAAK,CAACK,QAAQ,GAAG,EAAE;EACvB;EACA,OAAOL,KAAK;AAChB;AAEA,eAAeF,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}