{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\OneDrive\\\\Desktop\\\\integration in react with node\\\\to-do-list\\\\client\\\\src\\\\Components\\\\ToDoList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToDoList() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const postData = {\n    task: \"\"\n  };\n  const [inputData, setInputData] = useState(postData);\n  const handleData = e => {\n    setInputData({\n      ...inputData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const todayDate = moment().format('YYYY-MM-DD');\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (inputData.task.trim() !== '') {\n      Axios.post('http://localhost:8000/api/v1/task', inputData).then(response => {\n        console.log(response);\n        // Clear the input field after successfully adding a task\n        setInputData({\n          task: ''\n        });\n        // Fetch the updated list of tasks\n        fetchTasks();\n      }).catch(error => {\n        console.error('Error adding task:', error);\n      });\n    } else {\n      // Handle the case where the task input is empty\n      console.warn('Task cannot be empty');\n    }\n  };\n  const fetchTasks = async () => {\n    try {\n      const {\n        data\n      } = await Axios.get('http://localhost:8000/api/v1/task');\n      const arrayOfTask = data.data;\n      setTasks(arrayOfTask); // Store the entire array of tasks\n      console.log(arrayOfTask);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const filteredTask = tasks.filter(task => {\n    const taskDate = moment(task.created_at.slice(0, 10)).format('YYYY-MM-DD');\n    return todayDate === taskDate;\n  });\n  const filteredPendingWork = tasks.filter(task => {\n    let yesterday = moment().add(-1, 'days');\n    return console.log(yesterday);\n  });\n  let Todayscontent;\n  // let pendingWork;\n  if (filteredTask.length > 0) {\n    Todayscontent = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Today's task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), filteredTask.map(task => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: task.task\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  } else {\n    Todayscontent = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No task for today\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"task\",\n      value: inputData.task,\n      onChange: handleData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"addTask\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Todayscontent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: filteredPendingWork\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(ToDoList, \"P6YNe8xCvGCQ4qYUWeptzsY5IlA=\");\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useEffect","useState","Axios","moment","jsxDEV","_jsxDEV","ToDoList","_s","tasks","setTasks","postData","task","inputData","setInputData","handleData","e","target","name","value","todayDate","format","handleSubmit","preventDefault","trim","post","then","response","console","log","fetchTasks","catch","error","warn","data","get","arrayOfTask","filteredTask","filter","taskDate","created_at","slice","filteredPendingWork","yesterday","add","Todayscontent","length","children","fileName","_jsxFileName","lineNumber","columnNumber","map","id","type","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Hp/OneDrive/Desktop/integration in react with node/to-do-list/client/src/Components/ToDoList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Axios from 'axios';\r\nimport moment from 'moment'\r\n\r\nfunction ToDoList() {\r\n  const [tasks, setTasks] = useState([]);\r\n  const postData = {task : \"\"};\r\n  const [inputData,setInputData] = useState(postData);\r\n  const handleData = (e) =>{\r\n    setInputData({...inputData, [e.target.name]:e.target.value});\r\n  }\r\n\r\n  const todayDate = moment().format('YYYY-MM-DD');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputData.task.trim() !== '') {\r\n      Axios.post('http://localhost:8000/api/v1/task', inputData)\r\n        .then((response) => {\r\n          console.log(response);\r\n          // Clear the input field after successfully adding a task\r\n          setInputData({ task: '' });\r\n          // Fetch the updated list of tasks\r\n          fetchTasks();\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error adding task:', error);\r\n        });\r\n    } else {\r\n      // Handle the case where the task input is empty\r\n      console.warn('Task cannot be empty');\r\n    }\r\n  };\r\n  const fetchTasks = async () => {\r\n    try {\r\n      const { data } = await Axios.get('http://localhost:8000/api/v1/task');\r\n      const arrayOfTask = data.data;\r\n\r\n      setTasks(arrayOfTask); // Store the entire array of tasks\r\n      console.log(arrayOfTask);\r\n    } catch (error) {\r\n      console.error('Error fetching tasks:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  const filteredTask = tasks.filter(task => {\r\n    const taskDate = moment(task.created_at.slice(0,10)).format('YYYY-MM-DD');\r\n    return todayDate === taskDate;\r\n  }) \r\n\r\n  const filteredPendingWork = tasks.filter(task => {\r\n    let yesterday = moment().add(-1, 'days');\r\n    return console.log(yesterday)\r\n  })\r\n  let Todayscontent;\r\n  // let pendingWork;\r\n  if(filteredTask.length >0){\r\n    Todayscontent = (\r\n      <div>\r\n        <h3>Today's task</h3> \r\n        {filteredTask.map(task =>(\r\n          <p key={task.id}>{task.task}</p>\r\n        ))}\r\n      </div>\r\n    )\r\n  }else{\r\n    Todayscontent = (\r\n      <div>\r\n        <h3>No task for today</h3>\r\n      </div>\r\n    )\r\n  }\r\n  return (\r\n    <div>\r\n      <h2>To-Do List</h2>\r\n        <input type='text' name='task' value={inputData.task} onChange={handleData}></input>\r\n        <button onClick={handleSubmit}>addTask</button>\r\n        <div>\r\n        {Todayscontent}\r\n        </div>\r\n        <div>\r\n          {filteredPendingWork}\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToDoList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,QAAQ;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMS,QAAQ,GAAG;IAACC,IAAI,EAAG;EAAE,CAAC;EAC5B,MAAM,CAACC,SAAS,EAACC,YAAY,CAAC,GAAGZ,QAAQ,CAACS,QAAQ,CAAC;EACnD,MAAMI,UAAU,GAAIC,CAAC,IAAI;IACvBF,YAAY,CAAC;MAAC,GAAGD,SAAS;MAAE,CAACG,CAAC,CAACC,MAAM,CAACC,IAAI,GAAEF,CAAC,CAACC,MAAM,CAACE;IAAK,CAAC,CAAC;EAC9D,CAAC;EAED,MAAMC,SAAS,GAAGhB,MAAM,CAAC,CAAC,CAACiB,MAAM,CAAC,YAAY,CAAC;EAE/C,MAAMC,YAAY,GAAIN,CAAC,IAAK;IAC1BA,CAAC,CAACO,cAAc,CAAC,CAAC;IAClB,IAAIV,SAAS,CAACD,IAAI,CAACY,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAChCrB,KAAK,CAACsB,IAAI,CAAC,mCAAmC,EAAEZ,SAAS,CAAC,CACvDa,IAAI,CAAEC,QAAQ,IAAK;QAClBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;QACrB;QACAb,YAAY,CAAC;UAAEF,IAAI,EAAE;QAAG,CAAC,CAAC;QAC1B;QACAkB,UAAU,CAAC,CAAC;MACd,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;QAChBJ,OAAO,CAACI,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC5C,CAAC,CAAC;IACN,CAAC,MAAM;MACL;MACAJ,OAAO,CAACK,IAAI,CAAC,sBAAsB,CAAC;IACtC;EACF,CAAC;EACD,MAAMH,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAM;QAAEI;MAAK,CAAC,GAAG,MAAM/B,KAAK,CAACgC,GAAG,CAAC,mCAAmC,CAAC;MACrE,MAAMC,WAAW,GAAGF,IAAI,CAACA,IAAI;MAE7BxB,QAAQ,CAAC0B,WAAW,CAAC,CAAC,CAAC;MACvBR,OAAO,CAACC,GAAG,CAACO,WAAW,CAAC;IAC1B,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED/B,SAAS,CAAC,MAAM;IACd6B,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,YAAY,GAAG5B,KAAK,CAAC6B,MAAM,CAAC1B,IAAI,IAAI;IACxC,MAAM2B,QAAQ,GAAGnC,MAAM,CAACQ,IAAI,CAAC4B,UAAU,CAACC,KAAK,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC,CAACpB,MAAM,CAAC,YAAY,CAAC;IACzE,OAAOD,SAAS,KAAKmB,QAAQ;EAC/B,CAAC,CAAC;EAEF,MAAMG,mBAAmB,GAAGjC,KAAK,CAAC6B,MAAM,CAAC1B,IAAI,IAAI;IAC/C,IAAI+B,SAAS,GAAGvC,MAAM,CAAC,CAAC,CAACwC,GAAG,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC;IACxC,OAAOhB,OAAO,CAACC,GAAG,CAACc,SAAS,CAAC;EAC/B,CAAC,CAAC;EACF,IAAIE,aAAa;EACjB;EACA,IAAGR,YAAY,CAACS,MAAM,GAAE,CAAC,EAAC;IACxBD,aAAa,gBACXvC,OAAA;MAAAyC,QAAA,gBACEzC,OAAA;QAAAyC,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACpBd,YAAY,CAACe,GAAG,CAACxC,IAAI,iBACpBN,OAAA;QAAAyC,QAAA,EAAkBnC,IAAI,CAACA;MAAI,GAAnBA,IAAI,CAACyC,EAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgB,CAChC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EACH,CAAC,MAAI;IACHN,aAAa,gBACXvC,OAAA;MAAAyC,QAAA,eACEzC,OAAA;QAAAyC,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CACN;EACH;EACA,oBACE7C,OAAA;IAAAyC,QAAA,gBACEzC,OAAA;MAAAyC,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjB7C,OAAA;MAAOgD,IAAI,EAAC,MAAM;MAACpC,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEN,SAAS,CAACD,IAAK;MAAC2C,QAAQ,EAAExC;IAAW;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACpF7C,OAAA;MAAQkD,OAAO,EAAElC,YAAa;MAAAyB,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC/C7C,OAAA;MAAAyC,QAAA,EACCF;IAAa;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACN7C,OAAA;MAAAyC,QAAA,EACGL;IAAmB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAAC3C,EAAA,CArFQD,QAAQ;AAAAkD,EAAA,GAARlD,QAAQ;AAuFjB,eAAeA,QAAQ;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}